/
 * 1 - Explicações com árvore do DOM (um pouco estranho para mim até agora)
 *      == window -> representa uma janela que contém um elemento DOM;
        == location -> representa a localização do objeto a qual ele está associado, o documento atual;
        == document -> representa qualquer página da web carregada no navegador
        == history -> permite a manipulação do histórico da sessão do navegador
        == element -> tags que estão em arquivos HTML e que se transforma em elementos da árvore DOM;
        == text -> todo texto da tag;
        == atribute -> conteúdo da tag
 *  
    2 - Para acessar o documento HTML no console do navegador, utilizar o comando 'document' dentro do console, com isso, no console terei acesso a todo estrutura e dá acesso ao DOM

    3 - getElementById -> para buscar uma tag dentro do documento.
        Ex: document.getElementById(teste).

            - dessa forma ele irá procurar em todo o documento uma id chamada teste e retorná-la.
            A tag inteira, se for um p:
                <p id="teste"> parágrafo </p>

    4 - .innerHTML ->   para retorna o conteúdo do parágrafo

            Ex: console.log(document.getElementById("teste").innerHTML)

            ATENÇÃO: o innerHTML retorna todo o conteúdo da tag, no exemplo do parágrafo, inclusive tags de negrito e itálico.

    5 - .innerText -> retorna apenas o texto na tag

            Ex: console.log(document.getElementById("teste").innerText)

    6 - .style -> retorna todas os estilos aplicados nesse id

    7 - Para alterar o conteúdo da tag no script para ser persistente em eventual atualização da página no navegador, utilizar a seguinte sintaxe:

        Ex: 
        
            document.getElementById("teste").innerText = "Esse texto será alterado";

    ============= Aula ao vivo =============
    
    8 - getElementByTagName

        Para encontrar todas as tags com um certo nome que tem na página. Será retornado um array(HTML colection) com todas as tags, que podem ser acessadas por índice.
 
    9 - getElementByClassName

        Retornará todas as tags com um nome de class espefíca. Será retornado um conjunto (array) de elementos que possuem a mesma classe.

    10 - .querySelector

        chamar a função retornar APENAS o primeiro elemento do documento. No entanto, pode-se especificar uma seção e pegar o primeiro elemento daquela seção.

            Ex: document.querySelector('.nomeContainer.nomeClasse).style.color = 'red'

            Nesse caso alteraria a cor do elemento que está no nomeContainer, dentro da nomeClasse.

    11 - .querySelectorAll

        asdf

